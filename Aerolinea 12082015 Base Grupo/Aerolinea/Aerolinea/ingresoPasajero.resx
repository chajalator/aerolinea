<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnMenu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAktJREFUOE9tkMtvElEYxacxFalQTSiK6VtoDEIXmraJurJpU6xxY6IFqgujGzfu
        TPwb8BV3dKmlXZkYteWVpmmiLTLMFGaGoViKhJXBiFsXDT3e77ZgCCx+yck9j9x7BQAd7fhze3Zwz3mh
        WGCQbpchGgMHz56MHzx9fJ34+8g3U3KeL34wGvCeUXIOF+ms7lO2ZeCX50q6Mj2OytQYyu4hxE4a8NLt
        wotRN6JM0xl5lekJULZloOq5+vP31ARKFwd4YeGGB59DS5yFm7P87AfzqmyAss0DktRZnby0Xxg5h2iX
        Ae/u3oEspqDrOQ7pRZ8XEeZRpjp5eZ86jYHyzDWX3t+DiPE4lv0+5FipVC43QWfL9+8hzDKUpQ4f0Fz2
        /pTFXAyf6MTi3BxURUVOFJF/6If+wMchnU0kuBfy+7HKstShrrDV19cb7za9DXm9UDIKCntF6BsbKNjP
        ouCwHcK0urbGPcoszc+DOtStf+IxZtTy33dBqOvryA9ZkRs+hHQ6Huce9xW1Rh3+hPqAqum1jKqBkGMx
        5Ad6GqTGRiGurHCP0LJ668A2u4GiZkHI0RikM91IWY+wnWYDq9wj0pk2NxBTMhvQWECDFI1CtJiaSLIb
        1H1R2m4d+Lr1rSanMyDEcBiJU0ZG1xFMf/zEPWIzkWwdSKakmr6Th57bgfzmNcSe/0/g+tVz7lFGlOTm
        gWAwaGd/gLSiYTMWx/ZIH5RBaxOyoxdfIhGWUekPEAgE7I0BQRAMZrPZQthMJustQRhuh4N59Rx1AHT8
        A94vi7T8mOXtAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnGuardarVuelo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>